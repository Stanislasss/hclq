{//code

package queryast

import (
	"github.com/alecthomas/repr"
	. "github.com/mattolenik/hclq/structs"
)

type Crumb struct {
	Separator string `index:"0"`
	Value     string `index:"1"`
}
}//code

QUERY <- vals:(CrumbSeparator Ident)+ EOF {
    results := []*Crumb{}
    crumbs := AsSlice(vals)
    for _, crumb := range crumbs {
        crumbVals := AsSlice(crumb)
        c := &Crumb{}
        Fill(c, crumbVals)
        results = append(results, c)
    }
    return results, nil
}

Ident <- val:Char+ {
    return string(c.text), nil
}

Char <- [\x30-\x39\x41-\x7A\xA1-\u10FFFF]

CrumbSeparator <- val:'.' {
    return string(c.text), nil
}


EOF ← !.

// x30-x39 x41-x7A xA1-xFFFF